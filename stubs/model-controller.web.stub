<?php

namespace App\Http\Controllers{{namespace}};

use App\Http\Requests\{{modelName}}Request;
use App\Models\{{modelName}};
use App\Repositories\Contracts\{{modelName}}Contract;
use Illuminate\Http\Request;
use App\Http\Controllers\BaseWebController;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;

class {{modelName}}Controller extends BaseWebController
{
    /**
     * @return void
     */
    public static function middleware()
    {
        self::permissionMiddlewares('{{modelName}}');
    }

    /**
     * {{modelName}}Controller constructor.
     * @param {{modelName}}Contract $contract
     */
    private string $folderName;
    public function __construct({{modelName}}Contract $contract)
    {
        $this->folderName = '{{bladeNamespace}}.{{folderName}}';
        parent::__construct($contract);
    }
    
     /**
     * Show the form for creating a new resource.
     *
     * @return Application|Factory|View
     */
    public function create(): View|Factory|Application
    {
        return $this->createBlade();
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param {{modelName}}Request $request
     *
     * @return RedirectResponse
     */
    public function store({{modelName}}Request $request): RedirectResponse
    {
        $this->contract->create($request->validated());
        return $this->redirectBack('success', __('messages.actions_messages.create_success'));
    }

    /**
     * Display the specified resource.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return View|Factory|Application
     */
    public function show({{modelName}} ${{modelObject}}): View|Factory|Application
    {
        return $this->showBlade(['{{modelObject}}' => ${{modelObject}}]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return View|Factory|Application
     */
    public function edit({{modelName}} ${{modelObject}}): View|Factory|Application
    {
        return $this->editBlade(['{{modelObject}}' => ${{modelObject}}]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param {{modelName}}Request $request
     * @param {{modelName}} ${{modelObject}}
     *
     * @return RedirectResponse
     */
    public function update({{modelName}}Request $request, {{modelName}} ${{modelObject}}): RedirectResponse
    {
        $this->contract->update(${{modelObject}}, $request->validated());
        return $this->redirectBack('success', __('messages.actions_messages.update_success'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return RedirectResponse
     */
    public function destroy({{modelName}} ${{modelObject}}): RedirectResponse
    {
       $this->contract->remove(${{modelObject}});
       return $this->redirectBack('success', __('messages.actions_messages.delete_success'));
    }

    /**
     * active & inactive the specified resource from storage.
     * @param {{modelName}} ${{modelObject}}
     * @return RedirectResponse
     */
    public function changeActivation({{modelName}} ${{modelObject}}): RedirectResponse
    {
        $this->contract->toggleField(${{modelObject}}, 'is_active');
        return $this->redirectBack('success', __('messages.actions_messages.update_success'));
    }
}
