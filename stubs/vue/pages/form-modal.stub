<script setup>
import {reactive, ref} from "vue";
import {{modelName}}Api from "@api/{{modelNameLower}}.api";

const emit = defineEmits(["create", "update", "close"]);
const props = defineProps({
    resource: {
        type: Object,
        required: false,
    },
    openModal: {
        type: Boolean,
        required: true,
    },
    title: {
        type: String,
        required: true,
    },
})
let errors = reactive([]);
const disabled = ref(false);

async function submit() {
    disabled.value = true;
    if (props.resource?.id) {
        await update();
    } else {
        await save();
    }
}

async function save() {
    {{modelName}}Api.store(props.resource)
        .then(({data}) => {
            emit("create", data.data);
        })
        .catch(error => {
            errors.value = error.response.data.errors
        }).finally(() => {
        disabled.value = false;
    })
}

async function update() {
    {{modelName}}Api.update(props.resource)
        .then(({data}) => {
            emit("update", data.data);
        })
        .catch(error => {
            errors.value = error.response.data.errors
        }).finally(() => {
        disabled.value = false;
    })
}

async function close() {
    errors.value = [];
    emit("close");
}

</script>

<template>
    <el-dialog v-model="props.openModal" :title="$t(title)" @close="close">
        <el-form ref="ruleFormRef" :model="resource">
            <div class="col-md-12">
                <FormInput label="messages.name" :model="resource" name="name"
                           :errors="errors.value" :required="true"/>
            </div>
        </el-form>
        <hr>
        <span class="dialog-footer">
            <el-button type="primary" class="btn btn-primary mt-2" @click="submit()" :disabled="disabled">
                {{ $t('messages.submit') }}
            </el-button>
        </span>
    </el-dialog>
</template>
